# Generated by Django 4.2.5 on 2023-09-29 12:11

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Anastomosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnastomosisType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ColonAnatomy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('available_anastomoses', models.ManyToManyField(blank=True, related_name='available_in_anatomies', to='reports.anastomosis')),
            ],
        ),
        migrations.CreateModel(
            name='ComplicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Complication Type',
                'verbose_name_plural': 'Complication Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Examination',
                'verbose_name_plural': 'Examinations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExaminationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Examiner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IndicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Indication Type',
                'verbose_name_plural': 'Indication Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InformationSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Instrument Type',
                'verbose_name_plural': 'Instrument Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InterventionManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('components_ordered', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OrganComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('component_order_id', models.IntegerField(blank=True, null=True)),
                ('organ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='reports.organ')),
            ],
        ),
        migrations.CreateModel(
            name='PathologyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_procedure', models.DateField(default=django.utils.timezone.now)),
                ('altered_colon_anatomy', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('unknown', 'Unknown')], default='no', max_length=10)),
                ('colon_anatomy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reports.colonanatomy')),
                ('deepest_insertion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reports.organcomponent')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reports.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Premedication',
            fields=[
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='premedication', serialize=False, to='reports.report')),
                ('blood_oxygen_monitoring', models.BooleanField(default=True)),
                ('blood_pressure_monitoring', models.BooleanField(default=True)),
                ('ecg_monitoring', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SizeMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.unit')),
            ],
        ),
        migrations.CreateModel(
            name='SizeClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('pathology_types', models.ManyToManyField(blank=True, related_name='size_classifications', to='reports.pathologytype')),
            ],
        ),
        migrations.CreateModel(
            name='SizeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('size_min', models.FloatField(blank=True, null=True)),
                ('size_max', models.FloatField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='size_categories', to='reports.sizeclassification')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.unit')),
            ],
        ),
        migrations.CreateModel(
            name='ReportFindings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reports.report')),
            ],
        ),
        migrations.CreateModel(
            name='MorphologyClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('pathology_types', models.ManyToManyField(blank=True, related_name='morphology_classifications', to='reports.pathologytype')),
            ],
        ),
        migrations.CreateModel(
            name='MorphologyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='reports.morphologyclassification')),
            ],
        ),
        migrations.CreateModel(
            name='InterventionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('name_de', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('pathology_types', models.ManyToManyField(related_name='intervention_types', to='reports.pathologytype')),
            ],
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('name_de', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=10)),
                ('description', models.TextField()),
                ('intervention_types', models.ManyToManyField(related_name='interventions', to='reports.interventiontype')),
                ('pathology_types', models.ManyToManyField(related_name='interventions', to='reports.pathologytype')),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(max_length=100, unique=True)),
                ('name_en', models.CharField(max_length=100, unique=True)),
                ('instrument_types', models.ManyToManyField(blank=True, related_name='instruments', to='reports.instrumenttype')),
            ],
            options={
                'verbose_name': 'Instrument',
                'verbose_name_plural': 'Instruments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Indication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('indication_types', models.ManyToManyField(blank=True, to='reports.indicationtype')),
            ],
            options={
                'verbose_name': 'Indication',
                'verbose_name_plural': 'Indications',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExaminationTimeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('examinations', models.ManyToManyField(blank=True, to='reports.examination')),
            ],
            options={
                'verbose_name': 'Examination Time Type',
                'verbose_name_plural': 'Examination Time Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExaminationTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('time_types', models.ManyToManyField(blank=True, to='reports.examinationtimetype')),
            ],
            options={
                'verbose_name': 'Examination Time',
                'verbose_name_plural': 'Examination Times',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='examination',
            name='examination_types',
            field=models.ManyToManyField(blank=True, to='reports.examinationtype'),
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('preferred_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reports.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Complication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_de', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('complication_types', models.ManyToManyField(blank=True, to='reports.complicationtype')),
            ],
            options={
                'verbose_name': 'Complication',
                'verbose_name_plural': 'Complications',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ColonPolyp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('pathology_types', models.ManyToManyField(related_name='colon_polyps', to='reports.pathologytype')),
                ('report_findings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polyps', to='reports.reportfindings')),
            ],
        ),
        migrations.AddField(
            model_name='colonanatomy',
            name='available_segments',
            field=models.ManyToManyField(related_name='available_in_anatomies', to='reports.organcomponent'),
        ),
        migrations.AddField(
            model_name='anastomosis',
            name='component_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component1_anastomoses', to='reports.organcomponent'),
        ),
        migrations.AddField(
            model_name='anastomosis',
            name='component_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component2_anastomoses', to='reports.organcomponent'),
        ),
        migrations.AddField(
            model_name='anastomosis',
            name='connection_type_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connection1_anastomoses', to='reports.anastomosistype'),
        ),
        migrations.AddField(
            model_name='anastomosis',
            name='connection_type_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connection2_anastomoses', to='reports.anastomosistype'),
        ),
        migrations.CreateModel(
            name='DrugApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.drug')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.unit')),
                ('premedication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drug_applications', to='reports.premedication')),
            ],
        ),
        migrations.CreateModel(
            name='ColonPolypSize',
            fields=[
                ('polyp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='size', serialize=False, to='reports.colonpolyp')),
                ('categorical', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='colon_polyps_categorical', to='reports.sizecategory')),
                ('measurement', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='colon_polyp_size', to='reports.sizemeasurement')),
            ],
        ),
        migrations.CreateModel(
            name='ColonPolypMorphology',
            fields=[
                ('polyp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='morphology', serialize=False, to='reports.colonpolyp')),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('categorical', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colon_polyps_categorical', to='reports.morphologycategory')),
                ('paris', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colon_polyps_paris', to='reports.morphologycategory')),
            ],
        ),
        migrations.CreateModel(
            name='ColonPolypLocation',
            fields=[
                ('polyp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='colon_polyp_location', serialize=False, to='reports.colonpolyp')),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('cm', models.IntegerField(blank=True, null=True)),
                ('anastomosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polyp_locations', to='reports.anastomosis')),
                ('organ_component', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polyp_locations', to='reports.organcomponent')),
            ],
        ),
    ]
